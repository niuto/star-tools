{"version":3,"sources":["components/main-layout/store/reducer.js","components/main-layout/store/constants.js","components/main-layout/store/actionCreators.js","pages/login/store/reducer.js","pages/login/store/constants.js","pages/login/store/actionCreators.js","store/reducer.js","store/index.js","App.js","index.js"],"names":["defaultState","fromJS","collapsed","state","action","type","set","get","toggle","loginStatus","signIn","data","dispatch","console","log","axios","then","login_status","reducer","combineReducers","layout","layoutReducer","login","loginReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Loading","MainLayout","lazy","Login","Dashboard","App","fallback","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAGMA,EAAeC,iBAAO,CACxBC,WAAW,IAGA,aAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC7C,MCRyB,uBDQrBA,EAAOC,KACAF,EAAMG,IAAI,aAAcH,EAAMI,IAAI,cAGtCJ,GEVEK,EAAS,iBAAO,CACzBH,KDHyB,wB,sKEGvBL,EAAeC,iBAAO,CACxBQ,aAAa,IAGF,aAAmC,IAAlCN,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC7C,OAAOA,EAAOC,MAEV,ICViC,4BDW7B,OAAOF,EAAMG,IAAI,eAAe,GACpC,QACI,OAAOH,I,iBELNO,EAAS,SAACC,GACnB,OAAO,SAACC,GACJC,QAAQC,IAAIH,GACZI,IAAMR,IAAI,KAAKS,MAAK,WAChBJ,EATgC,CACxCP,KDJqC,4BCKrCY,cAOmC,U,oMCHxBC,EALCC,0BAAgB,CAC5BC,OAAQC,IACRC,MAAOC,MCFLC,EAAmBC,OAAOC,sCAAwCC,IAQzDC,EAPDC,YACVX,EACAM,EACIM,YAAgBC,OCDlBC,G,YAAU,kBAAO,6CACjBC,EAAaC,gBAAK,kBAAM,qEACxBC,EAAQD,gBAAK,kBAAM,sEACnBE,EAAYF,gBAAK,kBAAM,6EAsBdG,MApBf,WACI,OACI,kBAAC,IAAD,CAAUT,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,WAAD,CAAUU,SAAU,kBAAC,EAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWN,IACjC,kBAACF,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,KAAK,aAAaC,OAAK,EAACC,UAAWL,IAC1C,kBAAC,IAAD,CAAOG,KAAK,aAAaC,OAAK,EAACC,UAAWL,WClB1EM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8a002459.chunk.js","sourcesContent":["import { fromJS } from 'immutable';\nimport * as constants from './constants';\n\nconst defaultState = fromJS({\n    collapsed: false\n});\n\nexport default (state = defaultState, action) => {\n    if (action.type === constants.LAYOUT_TOGGLE) {\n        return state.set('collapsed', !state.get('collapsed'));\n    }\n\n    return state;\n}\n","export const LAYOUT_TOGGLE = 'main-layout/toggle';","import * as constants from './constants';\n\nexport const toggle = () => ({\n    type: constants.LAYOUT_TOGGLE\n});","import { fromJS } from 'immutable';\nimport * as constants from './constants';\n\nconst defaultState = fromJS({\n    loginStatus: false\n});\n\nexport default (state = defaultState, action) => {\n    switch(action.type) {\n        // 登录成功\n        case constants.LOGIN_CHANGE_LOGIN_STATUS:\n            return state.set('loginStatus', true);\n        default:\n            return state;\n    }\n}\n","export const LOGIN_CHANGE_LOGIN_STATUS = 'login/change_login_status';","import axios from 'axios';\nimport * as constants from './constants';\n\nconst changeLoginStatus = (loginStatus) => ({\n    type: constants.LOGIN_CHANGE_LOGIN_STATUS,\n    login_status: loginStatus\n});\n\nexport const signIn = (data) => {\n    return (dispatch) => {\n        console.log(data);\n        axios.get('/').then(() => {\n            dispatch(changeLoginStatus(true))\n        })\n    }\n};\n","import { combineReducers } from \"redux-immutable\";\r\nimport { reducer as layoutReducer } from '../components/main-layout/store/';\r\nimport { reducer as loginReducer } from '../pages/login/store';\r\n\r\nconst reducer = combineReducers({\r\n    layout: layoutReducer,\r\n    login: loginReducer,\r\n});\r\n\r\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React, { lazy, Suspense, Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport 'antd/dist/antd.css';\nimport './style.css';\n\nconst Loading = () => (<div>Loading...</div>);\nconst MainLayout = lazy(() => import('./components/main-layout'));\nconst Login = lazy(() => import('./pages/login'));\nconst Dashboard = lazy(() => import('./pages/dashboard'));\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Suspense fallback={<Loading />}>\n                    <Switch>\n                        <Route path='/' exact component={Login} />\n                        <MainLayout>\n                            <Route>\n                                <Route path='/dashboard' exact component={Dashboard} />\n                                <Route path='/libs/tool' exact component={Dashboard} />\n                            </Route>\n                        </MainLayout>\n                    </Switch>\n                </Suspense>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}